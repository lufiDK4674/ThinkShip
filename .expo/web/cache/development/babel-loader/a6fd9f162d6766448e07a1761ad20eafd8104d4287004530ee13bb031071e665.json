{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignUp from \"./screens/SignUp\";\nimport Login from \"./screens/login\";\nimport Post from \"./screens/post\";\nimport HomeScreen from \"./screens/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar checkForToken = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var token = yield AsyncStorage.getItem('token');\n      if (token) {\n        navigation.navigate('Home');\n      } else {\n        navigation.navigate('Login');\n      }\n    } catch (error) {\n      console.error('Error retrieving token:', error);\n      navigation.navigate('Login');\n    }\n  });\n  return function checkForToken() {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction User() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"SignUp\",\n        component: SignUp,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Post\",\n        component: Post,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      })]\n    })\n  });\n}\nexport default User;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","SignUp","Login","Post","HomeScreen","jsx","_jsx","jsxs","_jsxs","Stack","checkForToken","_ref","_asyncToGenerator","token","AsyncStorage","getItem","navigation","navigate","error","console","apply","arguments","User","children","Navigator","Screen","name","component","options","headerShown"],"sources":["C:/Users/4674k/OneDrive/Documents/Programming/React Native Training 2/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport SignUp from \"./screens/SignUp\";\r\nimport Login from \"./screens/login\";\r\nimport Post from \"./screens/post\";\r\nimport HomeScreen from \"./screens/Home\";\r\nconst Stack = createStackNavigator();\r\n\r\nconst checkForToken = async () => {\r\n  try {\r\n    const token = await AsyncStorage.getItem('token');\r\n    if (token) {\r\n      // Token exists, navigate to the Home screen\r\n      // You might need to set up your navigation properly here\r\n      // This is a simplified example assuming StackNavigator\r\n      navigation.navigate('Home');\r\n    } else {\r\n      // No token found, navigate to the Login screen\r\n      navigation.navigate('Login');\r\n    }\r\n  } catch (error) {\r\n    // Handle errors, log, or navigate to Login if error occurs\r\n    console.error('Error retrieving token:', error);\r\n    navigation.navigate('Login');\r\n  }\r\n};\r\n\r\nfunction User() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator >\r\n        <Stack.Screen name=\"SignUp\" component={SignUp} options={{headerShown: false}}/>\r\n        <Stack.Screen name=\"Login\" component={Login} options={{headerShown: false}}/>\r\n        <Stack.Screen name=\"Post\" component={Post} options={{headerShown: false}}/>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,UAAU;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACxC,IAAMC,KAAK,GAAGT,oBAAoB,CAAC,CAAC;AAEpC,IAAMU,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAChC,IAAI;MACF,IAAMC,KAAK,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAIF,KAAK,EAAE;QAITG,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;MAC7B,CAAC,MAAM;QAELD,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CF,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;IAC9B;EACF,CAAC;EAAA,gBAjBKP,aAAaA,CAAA;IAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiBlB;AAED,SAASC,IAAIA,CAAA,EAAG;EACd,OACEhB,IAAA,CAACP,mBAAmB;IAAAwB,QAAA,EAClBf,KAAA,CAACC,KAAK,CAACe,SAAS;MAAAD,QAAA,GACdjB,IAAA,CAACG,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAE1B,MAAO;QAAC2B,OAAO,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,CAAC,CAAC,EAC/EvB,IAAA,CAACG,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEzB,KAAM;QAAC0B,OAAO,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,CAAC,CAAC,EAC7EvB,IAAA,CAACG,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAExB,IAAK;QAACyB,OAAO,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,CAAC,CAAC,EAC3EvB,IAAA,CAACG,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEvB;MAAW,CAAE,CAAC;IAAA,CACpC;EAAC,CACC,CAAC;AAE1B;AAEA,eAAekB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}